name: Docker Image CI
#
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  push_to_registry:
    runs-on: [self-hosted,linux,X64,test]
    # Set enviroment variables  
    env:
     AZURE_CR: "thomastestazurecontainerreg.azurecr.io"
     IMG_NAME: "flask-hello-world-app"
    steps: 
# Checkout the repository
    - id: checkout_repo
      name: Check out the repo
      uses: actions/checkout@v2
      
#----------------------------------
# Build the container image for DockerHub
    - id: build_container_dockerhub
      name: Build the Docker image
      run: docker build --file amd64.Dockerfile --tag ${{ secrets.DOCKERHUB_USERNAME_THOMAS }}/$IMG_NAME:$GITHUB_SHA .

# Login to Dockerhub
    - id: login_dockerhub
      name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
          username: ${{ secrets.DOCKERHUB_USERNAME_THOMAS }}
          password: ${{ secrets.DOCKERHUB_PASSWORD_THOMAS }}

# Push the built Docker image to the Dockerhub registry
    - id: push_dockerhub
      name: Push image to DockerHub
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/$IMG_NAME:$GITHUB_SHA
      
#----------------------------------
# Tag the image to be used for Azure
    - id: tag_container_azure
      name: tag the previously built image for dockerhub, so the identical image (same hash!) will just be tagged again and can then be pushed to the ACR
      run: docker tag {{ secrets.DOCKERHUB_USERNAME_THOMAS }}/$IMG_NAME:$GITHUB_SHA $AZURE_CR/$IMG_NAME:$GITHUB_SHA

# Login to Azure Container Registry
    - name: Login to ACR
      uses: docker/login-action@v1
      with:
        registry: $AZURE_CR
        username: ${{ secrets.AZURECR_USERNAME_THOMAS }}
        password: ${{ secrets.AZURECR_PASSWORD_THOMAS }}

# Push the built Docker image to the Dockerhub registry
    - id: push_azure
      name: Push image to Azure container registry
      run: docker push $AZURE_CR/$IMG_NAME:$GITHUB_SHA
#----------------------------------

